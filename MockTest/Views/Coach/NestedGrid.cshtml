@model IEnumerable<MockTest.Models.TestVM>
@{
    ViewBag.Title = "NestedGrid";
    WebGrid webGrid = new WebGrid(source: Model, canSort: false, canPage: false);
}

@section head{
    <style type="text/css">
        body {
            font-family: Arial;
            font-size: 10pt;
        }

        .Grid {
            border: 1px solid #ccc;
            border-collapse: collapse;
            background-color: #fff;
        }

            .Grid th {
                background-color: #B8DBFD;
                color: #333;
                font-weight: bold;
            }

            .Grid th, .Grid td {
                padding: 5px;
                border: 1px solid #ccc;
            }

            .Grid img {
                cursor: pointer;
            }

        .ChildGrid {
            width: 100%;
        }

            .ChildGrid th {
                background-color: #6C6C6C;
                color: #fff;
                font-weight: bold;
            }
    </style>
}
<h2>Nested Grid</h2>

@webGrid.GetHtml(
        htmlAttributes: new { @id = "WebGrid", @class = "Grid" },
        columns: webGrid.Columns(
                 webGrid.Column(null, null, format: @<text><img src="~/Images/plus.png" /><div style="display:none"></div></text>),
                                             webGrid.Column("test.TestType", "Test Type"),
                                             webGrid.Column(header: "Test Date", format: (item) => string.Format("{0:dd/MM/yyyy}", item.test.TestDate)),
                                     webGrid.Column(format: (item) =>
                                     {
                                         WebGrid childGrid = new WebGrid(source: item.testDetails, canSort: false, canPage: false);
                                         return childGrid.GetHtml(
                                         htmlAttributes: new { @class = "ChildGrid" },
                                         columns: childGrid.Columns(
                                                 childGrid.Column("Name", "Name"),
                                                 childGrid.Column("Distance", "Distance")
                                          ));
                                     })
                            ))
@section scripts{
    <script>
        $(function () {
            //Loop through all Child Grids.
            $("#WebGrid .ChildGrid").each(function () {
                //Copy the Child Grid to DIV.
                var childGrid = $(this).clone();
                $(this).closest("TR").find("TD").eq(0).find("DIV").append(childGrid);

                //Remove the Last Column from the Row.
                $(this).parent().remove();
            });

            //Remove Last Column from Header Row.
            $("#WebGrid TH:last-child").eq(0).remove();
        });
        //Assign Click event to Plus Image.
        $("body").on("click", "img[src*='plus.png']", function () {
            $(this).closest("tr").after("<tr><td></td><td colspan = '999'>" + $(this).next().html() + "</td></tr>");
            $(this).attr("src", "/images/minus.png");
        });
        //Assign Click event to Minus Image.
        $("body").on("click", "img[src*='minus.png']", function () {
            $(this).attr("src", "/images/plus.png");
            $(this).closest("tr").next().remove();
        });
    </script>
}
